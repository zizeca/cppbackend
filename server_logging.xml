<?xml version="1.0" encoding="utf-8"?><testsuites><testsuite name="pytest" errors="8" failures="0" skipped="0" tests="8" time="0.557" timestamp="2022-11-26T15:30:38.124100" hostname="server"><testcase classname="cpp-backend-tests-practicum.tests.test_s02_server_logging" name="test_logs" time="0.001"><error message="failed on setup with &quot;KeyError: 'COMMAND_RUN'&quot;">xprocess = &lt;xprocess.xprocess.XProcess object at 0x7fb6ef03b100&gt;

    @pytest.fixture(scope='module')
    def server(xprocess):
&gt;       with _make_server(xprocess) as result:

cpp-backend-tests-practicum/tests/conftest.py:62: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/usr/lib/python3.10/contextlib.py:135: in __enter__
    return next(self.gen)
cpp-backend-tests-practicum/tests/conftest.py:68: in _make_server
    commands = os.environ['COMMAND_RUN'].split()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = environ({'SHELL': '/bin/bash', 'PYENV_HOOK_PATH': '/home/zizu/.pyenv/pyenv.d:/usr/local/etc/pyenv.d:/etc/pyenv.d:/usr/.../home/zizu', 'PYTEST_CURRENT_TEST': 'cpp-backend-tests-practicum/tests/test_s02_server_logging.py::test_logs (setup)'})
key = 'COMMAND_RUN'

    def __getitem__(self, key):
        try:
            value = self._data[self.encodekey(key)]
        except KeyError:
            # raise KeyError with the original key value
&gt;           raise KeyError(key) from None
E           KeyError: 'COMMAND_RUN'

/usr/lib/python3.10/os.py:680: KeyError</error></testcase><testcase classname="cpp-backend-tests-practicum.tests.test_s02_server_logging" name="test_list" time="0.001"><error message="failed on setup with &quot;KeyError: 'COMMAND_RUN'&quot;">xprocess = &lt;xprocess.xprocess.XProcess object at 0x7fb6ef03b100&gt;

    @pytest.fixture(scope='module')
    def server(xprocess):
&gt;       with _make_server(xprocess) as result:

cpp-backend-tests-practicum/tests/conftest.py:62: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/usr/lib/python3.10/contextlib.py:135: in __enter__
    return next(self.gen)
cpp-backend-tests-practicum/tests/conftest.py:68: in _make_server
    commands = os.environ['COMMAND_RUN'].split()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = environ({'SHELL': '/bin/bash', 'PYENV_HOOK_PATH': '/home/zizu/.pyenv/pyenv.d:/usr/local/etc/pyenv.d:/etc/pyenv.d:/usr/.../home/zizu', 'PYTEST_CURRENT_TEST': 'cpp-backend-tests-practicum/tests/test_s02_server_logging.py::test_list (setup)'})
key = 'COMMAND_RUN'

    def __getitem__(self, key):
        try:
            value = self._data[self.encodekey(key)]
        except KeyError:
            # raise KeyError with the original key value
&gt;           raise KeyError(key) from None
E           KeyError: 'COMMAND_RUN'

/usr/lib/python3.10/os.py:680: KeyError</error></testcase><testcase classname="cpp-backend-tests-practicum.tests.test_s02_server_logging" name="test_info" time="0.001"><error message="failed on setup with &quot;KeyError: 'COMMAND_RUN'&quot;">xprocess = &lt;xprocess.xprocess.XProcess object at 0x7fb6ef03b100&gt;

    @pytest.fixture(scope='module')
    def server(xprocess):
&gt;       with _make_server(xprocess) as result:

cpp-backend-tests-practicum/tests/conftest.py:62: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/usr/lib/python3.10/contextlib.py:135: in __enter__
    return next(self.gen)
cpp-backend-tests-practicum/tests/conftest.py:68: in _make_server
    commands = os.environ['COMMAND_RUN'].split()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = environ({'SHELL': '/bin/bash', 'PYENV_HOOK_PATH': '/home/zizu/.pyenv/pyenv.d:/usr/local/etc/pyenv.d:/etc/pyenv.d:/usr/.../home/zizu', 'PYTEST_CURRENT_TEST': 'cpp-backend-tests-practicum/tests/test_s02_server_logging.py::test_info (setup)'})
key = 'COMMAND_RUN'

    def __getitem__(self, key):
        try:
            value = self._data[self.encodekey(key)]
        except KeyError:
            # raise KeyError with the original key value
&gt;           raise KeyError(key) from None
E           KeyError: 'COMMAND_RUN'

/usr/lib/python3.10/os.py:680: KeyError</error></testcase><testcase classname="cpp-backend-tests-practicum.tests.test_s02_server_logging" name="test_map_not_found" time="0.001"><error message="failed on setup with &quot;KeyError: 'COMMAND_RUN'&quot;">xprocess = &lt;xprocess.xprocess.XProcess object at 0x7fb6ef03b100&gt;

    @pytest.fixture(scope='module')
    def server(xprocess):
&gt;       with _make_server(xprocess) as result:

cpp-backend-tests-practicum/tests/conftest.py:62: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/usr/lib/python3.10/contextlib.py:135: in __enter__
    return next(self.gen)
cpp-backend-tests-practicum/tests/conftest.py:68: in _make_server
    commands = os.environ['COMMAND_RUN'].split()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = environ({'SHELL': '/bin/bash', 'PYENV_HOOK_PATH': '/home/zizu/.pyenv/pyenv.d:/usr/local/etc/pyenv.d:/etc/pyenv.d:/usr/...u', 'PYTEST_CURRENT_TEST': 'cpp-backend-tests-practicum/tests/test_s02_server_logging.py::test_map_not_found (setup)'})
key = 'COMMAND_RUN'

    def __getitem__(self, key):
        try:
            value = self._data[self.encodekey(key)]
        except KeyError:
            # raise KeyError with the original key value
&gt;           raise KeyError(key) from None
E           KeyError: 'COMMAND_RUN'

/usr/lib/python3.10/os.py:680: KeyError</error></testcase><testcase classname="cpp-backend-tests-practicum.tests.test_s02_server_logging" name="test_bad_request" time="0.001"><error message="failed on setup with &quot;KeyError: 'COMMAND_RUN'&quot;">xprocess = &lt;xprocess.xprocess.XProcess object at 0x7fb6ef03b100&gt;

    @pytest.fixture(scope='module')
    def server(xprocess):
&gt;       with _make_server(xprocess) as result:

cpp-backend-tests-practicum/tests/conftest.py:62: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/usr/lib/python3.10/contextlib.py:135: in __enter__
    return next(self.gen)
cpp-backend-tests-practicum/tests/conftest.py:68: in _make_server
    commands = os.environ['COMMAND_RUN'].split()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = environ({'SHELL': '/bin/bash', 'PYENV_HOOK_PATH': '/home/zizu/.pyenv/pyenv.d:/usr/local/etc/pyenv.d:/etc/pyenv.d:/usr/...izu', 'PYTEST_CURRENT_TEST': 'cpp-backend-tests-practicum/tests/test_s02_server_logging.py::test_bad_request (setup)'})
key = 'COMMAND_RUN'

    def __getitem__(self, key):
        try:
            value = self._data[self.encodekey(key)]
        except KeyError:
            # raise KeyError with the original key value
&gt;           raise KeyError(key) from None
E           KeyError: 'COMMAND_RUN'

/usr/lib/python3.10/os.py:680: KeyError</error></testcase><testcase classname="cpp-backend-tests-practicum.tests.test_s02_server_logging" name="test_image" time="0.001"><error message="failed on setup with &quot;KeyError: 'COMMAND_RUN'&quot;">xprocess = &lt;xprocess.xprocess.XProcess object at 0x7fb6ef03b100&gt;

    @pytest.fixture(scope='module')
    def server(xprocess):
&gt;       with _make_server(xprocess) as result:

cpp-backend-tests-practicum/tests/conftest.py:62: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/usr/lib/python3.10/contextlib.py:135: in __enter__
    return next(self.gen)
cpp-backend-tests-practicum/tests/conftest.py:68: in _make_server
    commands = os.environ['COMMAND_RUN'].split()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = environ({'SHELL': '/bin/bash', 'PYENV_HOOK_PATH': '/home/zizu/.pyenv/pyenv.d:/usr/local/etc/pyenv.d:/etc/pyenv.d:/usr/...home/zizu', 'PYTEST_CURRENT_TEST': 'cpp-backend-tests-practicum/tests/test_s02_server_logging.py::test_image (setup)'})
key = 'COMMAND_RUN'

    def __getitem__(self, key):
        try:
            value = self._data[self.encodekey(key)]
        except KeyError:
            # raise KeyError with the original key value
&gt;           raise KeyError(key) from None
E           KeyError: 'COMMAND_RUN'

/usr/lib/python3.10/os.py:680: KeyError</error></testcase><testcase classname="cpp-backend-tests-practicum.tests.test_s02_server_logging" name="test_file_not_found" time="0.001"><error message="failed on setup with &quot;KeyError: 'COMMAND_RUN'&quot;">xprocess = &lt;xprocess.xprocess.XProcess object at 0x7fb6ef03b100&gt;

    @pytest.fixture(scope='module')
    def server(xprocess):
&gt;       with _make_server(xprocess) as result:

cpp-backend-tests-practicum/tests/conftest.py:62: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/usr/lib/python3.10/contextlib.py:135: in __enter__
    return next(self.gen)
cpp-backend-tests-practicum/tests/conftest.py:68: in _make_server
    commands = os.environ['COMMAND_RUN'].split()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = environ({'SHELL': '/bin/bash', 'PYENV_HOOK_PATH': '/home/zizu/.pyenv/pyenv.d:/usr/local/etc/pyenv.d:/etc/pyenv.d:/usr/...', 'PYTEST_CURRENT_TEST': 'cpp-backend-tests-practicum/tests/test_s02_server_logging.py::test_file_not_found (setup)'})
key = 'COMMAND_RUN'

    def __getitem__(self, key):
        try:
            value = self._data[self.encodekey(key)]
        except KeyError:
            # raise KeyError with the original key value
&gt;           raise KeyError(key) from None
E           KeyError: 'COMMAND_RUN'

/usr/lib/python3.10/os.py:680: KeyError</error></testcase><testcase classname="cpp-backend-tests-practicum.tests.test_s02_server_logging" name="test_index_html" time="0.001"><error message="failed on setup with &quot;KeyError: 'COMMAND_RUN'&quot;">xprocess = &lt;xprocess.xprocess.XProcess object at 0x7fb6ef03b100&gt;

    @pytest.fixture(scope='module')
    def server(xprocess):
&gt;       with _make_server(xprocess) as result:

cpp-backend-tests-practicum/tests/conftest.py:62: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/usr/lib/python3.10/contextlib.py:135: in __enter__
    return next(self.gen)
cpp-backend-tests-practicum/tests/conftest.py:68: in _make_server
    commands = os.environ['COMMAND_RUN'].split()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = environ({'SHELL': '/bin/bash', 'PYENV_HOOK_PATH': '/home/zizu/.pyenv/pyenv.d:/usr/local/etc/pyenv.d:/etc/pyenv.d:/usr/...zizu', 'PYTEST_CURRENT_TEST': 'cpp-backend-tests-practicum/tests/test_s02_server_logging.py::test_index_html (setup)'})
key = 'COMMAND_RUN'

    def __getitem__(self, key):
        try:
            value = self._data[self.encodekey(key)]
        except KeyError:
            # raise KeyError with the original key value
&gt;           raise KeyError(key) from None
E           KeyError: 'COMMAND_RUN'

/usr/lib/python3.10/os.py:680: KeyError</error></testcase></testsuite></testsuites>